[{"path":"https://luddaludwig.github.io/UPLforOAR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 UPLforOAR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Bayesian UPL","text":"vignette describes use Bayesian_UPL() function. goal Bayesian_UPL() provide flexible consistent method calculating Upper Predictive Limits (UPL) type emissions data determine National Emissions Standards Hazardous Air Pollutants (NESHAP) existing new sources. Current UPL methods applicable emissions data distributed Normally, Skewed, Lognormally. UPL Normal data can calculated analytically Normal_UPL() using mean, standard deviation, t-score. However, equivalent analytical solutions Skewed Lognormal UPL calculations. Instead, Lognormal_UPL() uses Gram-Charlier Type Series expansion approximate density distribution determine arithmetic mean future samples, Skewed_UPL() uses skewness kurtosis moments iteratively adjust t-score desired significance achieved. three UPL methods assume distribution explicitly without uncertainty, assume emissions observed perfectly independently. operating Bayesian framework, can use method deriving UPL agnostic type distribution, also dramatically increase choices distribution. Bayesian inference also benefits fewer assumptions better uncertainty quantification. allows accurate representation emissions data better transparency metrics fitness support UPL calculation. Bayesian_UPL() uses Monte Carlo Markov Chain (MCMC) sampler (Gibbs sampler implemented via JAGS) fit probability distributions emissions data. example, using Normal distribution, entails estimating mean standard deviation define distribution. Unlike Normal_UPL() analytical solution, don’t merely get point-estimate mean standard deviation, instead derive posterior distribution describes full probability mean standard deviation. allows us quantify uncertainty predicted probability distribution future emission observation. Numerous probability distributions already implemented R stats JAGS, distribution isn’t, combination distributions, can coded manually JAGS needed. probability distribution, UPL calculated taking 99^{th} percentile average new draws (usually 3 new runs comparative typical compliance test).","code":""},{"path":[]},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"step-1-load-and-plot-the-emissions-observations","dir":"Articles","previous_headings":"Example: HCl Emissions from Integrated Iron and Steel","what":"Step 1: Load and plot the emissions observations","title":"Bayesian UPL","text":"Let’s look example data set HCl emissions Integrated Iron Steel. data set provided already set top performers industry, need run MACT_EG() select data. first step load plot emissions data. Take quick look average emission source data set: Top sources existing source calculation Next want look density plots emission observations. goal fit probability density best describes data, can determine UPL. order know probability density good match emissions data, want look empirical density observations. example plot density using ggplot2::geom_density() source lower bound 0 since negative emissions impossible. UPLforOAR package includes several ggplot2 themes designed density figures. figure uses multi_source_theme(). Observation density IIS HCl emissions top performing source. cases however, want control density results. default settings obs_density() designed compatible typical emissions data, appropriate kernel types, bandwidths, bounds, estimators, non-zero data, well better default bandwidth estimator. Furthermore, can store results directly environment rather inside ggplot object. figure shows overall observation density top performing source population, goal determine appropriately representative likelihood distribution calculate UPL. figures uses pop_distr_theme() plots obs_density() results using ggplot2::geom_line ggplot2::geom_line. emission observations indicated points rug underneath plot. Observation density IIS HCl emissions top performers overall population.","code":"dat_emiss=read.csv('IIS_HCl.csv')  emission_mean=mean(dat_emiss$emissions) dat_means=summarize(dat_emiss,means=mean(emissions),counts=n(),.by='sources')  dat_means$sources=as.factor(dat_means$sources) dat_means$sources=fct_reorder(dat_means$sources,                               dat_means$means,.desc = FALSE) dat_emiss$sources=factor(dat_emiss$sources,levels=levels(dat_means$sources)) dat_means=arrange(dat_means,means) ggplot(aes(emissions,fill=sources),data=dat_emiss)+   geom_density(alpha=0.5,trim=FALSE,bounds=c(0,Inf))+   multi_source_theme()+theme(legend.text = element_text(size=8))+   guides(fill=guide_legend(nrow=2,byrow=TRUE),          color=guide_legend(nrow=2,byrow=TRUE))+   scale_x_continuous(expand=expansion(mult=c(0,0.05)))+   scale_y_continuous(expand=expansion(mult=c(0,0.05)))+   geom_rug(sides='b',aes(x=emissions,color=sources),            alpha=0.5,outside=TRUE)+coord_cartesian(clip='off')+   ggtitle(\"Source observed populations\")+   ylab(\"Density\")+xlab(\"IIS HCl emissions\")+   labs(fill='Top sources',color='Top sources') obs_dens_results=obs_density(data=dat_emiss) Obs_onPoint=obs_dens_results$Obs_onPoint obs_den_df=obs_dens_results$obs_den_df ggplot(data=Obs_onPoint)+   geom_line(data=obs_den_df,aes(y=ydens,x=(x_hat)),size=0.75,color='black')+   geom_area(data=obs_den_df,aes(y=ydens,x=(x_hat)),alpha=0.25,fill='black')+   geom_point(aes(y=ydens,x=(emissions)),              size=3,alpha=0.5,shape=19,color='black')+   ylab(\"Density\")+xlab(\"IIS HCl emissions\")+   ggtitle(\"Overall observed population\")+   pop_distr_theme()+   scale_x_continuous(expand=expansion(mult=c(0,0.05)))+   scale_y_continuous(expand=expansion(mult=c(0,0.05)))+   coord_cartesian(clip='off')+   geom_rug(sides='b',aes(x=(emissions)),data=dat_emiss,            alpha=0.5,outside=TRUE,color='black')"},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"step-2-explore-possible-likelihood-distributions","dir":"Articles","previous_headings":"Example: HCl Emissions from Integrated Iron and Steel","what":"Step 2: Explore possible likelihood distributions","title":"Bayesian UPL","text":"can use informed decision likelihood distributions investigate. example, Beta distribution appropriate observations strictly 0 1. case, might see Normal distribution poor choice given asymmetric shape observations clustered 0. However, purposes vignette, look distributions currently supported. fit likelihood models following distributions: Beta, Gamma, Lognormal, Normal, Skewed. Using default settings Bayesian_UPL() information need provide data set emissions. Bayesian_UPL() function fit likelihood distributions using uninformative priors wide range initial values, test convergence, test goodness fit, organize MCMC results later plotting, return UPL given significance number future runs. Many options can adjusted manually evaluated step-wise, Bayesian_UPL() designed run minimal user input needed. Fitted likelihood distributions IIS HCl emissions.","code":"distributions=c('Beta','Gamma','Lognormal','Normal','Skewed') results=Bayesian_UPL(data=dat_emiss, distr_list=distributions)"},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"step-3-selecting-a-distribution","dir":"Articles","previous_headings":"Example: HCl Emissions from Integrated Iron and Steel","what":"Step 3: Selecting a distribution","title":"Bayesian UPL","text":"Unsurprisingly, Normal distribution look good. distributions fairly similar observation density. pick best distribution several seem appropriate? cases can rule options visually. example, Skewed distribution fits probabilities emission observations decently well, undesirable behavior near 0 emissions. distributions, Skewed comes 0 probability abruptly emissions decline towards 0. seem like realistic behavior? likely tiny gap 0 lowest emission measurement due testing detection limits, true 0 probability emissions occur low. can also use quantitative metrics decide best distribution. metrics can accessed fit_table Bayesian_UPL() results. can leverage Bayesian abilities quantify uncertainty count many emission observations (black points plots ) densities within 95% CI predicted probability densities (error bars plots ). can also quantify different observed predicted densities looking Sum Squared Errors (SSE): SSE=∑(yi−yî)2SSE=\\displaystyle\\sum(y_i-\\hat{y_i})^2. Lastly, might want check area curve probability distribution close 1. doesn’t integrate 1, isn’t proper probability density. case Normal distribution example, since extend 0 emissions defined, integrates less 1. Goodness fit results IIS HCl emissions Gamma Beta distributions lowest SSE, emission observations densities 95% probability density, areas curve integrate approximately 1. Skewed distribution slightly higher SSE fewer observations confidence intervals. Lognormal distribution observations confidence intervals (1), larger SSE due points particularly -target. expected, Normal distribution scores worst accounts. quantitative results provided results$fit_table agree visual comparison figure . select Gamma distribution, best ranked aligns well visual assessment, Gamma defined (0, Inf) whereas Beta (almost good) defined (0, 1). Even though observations well 1, unnecessary constraint.","code":"fit_metrics=results$fit_table"},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"step-4-upper-predictive-limits-upl-results","dir":"Articles","previous_headings":"Example: HCl Emissions from Integrated Iron and Steel","what":"Step 4: Upper Predictive Limits (UPL) results","title":"Bayesian UPL","text":"Now fit likelihood distributions can examine UPL results. default values Bayesian_UPL() assume significance 0.99 average 3 future runs (typical compliance test). significance future_runs arguments can set values desired, affect fitted likelihood distribution change UPL calculation. UPL results variable UPL stored results$fit_table: Upper Predictive Limits IIS HCl emissions","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"step-5-check-for-convergence","dir":"Articles","previous_headings":"Example: HCl Emissions from Integrated Iron and Steel","what":"Step 5: Check for convergence","title":"Bayesian UPL","text":"One last step can accept UPL result check convergence. Given well Gamma likelihood fit probability distribution, highly unlikely convergence issues. However, need verify document convergence every time. check convergence quantitatively qualitatively. quantitative convergence results stored results$conv_output. parameters distribution supplied Bayesian_UPL() monitored assessed convergence using Gelman-Rubin diagnostic, corresponding outcome convergence convYN. distribution’s parameters fail Gelman-Rubin diagnostic checks convergence, results used. Gelman-Rubin convergence tests likelihood parameters Gelman-Rubin diagnostic test 3 separate MCMC chains become well-mixed without trends. Passing Gelman-Rubin convergence test necessary sufficient. visual examination MCMC iterations parameter histograms also necessary. well converged visual assessment show evenly mixed iterations across chains approximately normal histogram parameter’s posterior distribution. report figures needed assess convergence can generated Bayesian_UPL() setting argument convergence_report = TRUE. report saved active working directory “Bayesian_UPL_convergence_current-date--time.pdf”","code":"#> Compiling rjags model... #> Starting 3 rjags simulations using a PSOCK cluster with 3 nodes on host #> 'localhost' #> Simulation complete #> Finished running the simulation #> [[1]] #>  #> [[2]]"},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"further-options-for-bayesian-upl-analysis","dir":"Articles","previous_headings":"","what":"Further options for Bayesian UPL analysis","title":"Bayesian UPL","text":"example used default settings automatically control things prior distribution, initial values, expected emission range, observation density evaluation. default settings great place start might sufficient uses, sections explain mechanics --hood full options Bayesian_UPL().","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"density","dir":"Articles","previous_headings":"Further options for Bayesian UPL analysis","what":"Density","title":"Bayesian UPL","text":"order know probability density good match emissions data, want look empirical density observations. easy ggplot2::geom_density(), uses stats::density() can take additional arguments related density determined bandwidth bw, kernel kernel, known upper lower limits bounds. default, geom_density() uses bounds, gaussian kernel, rule--thumb method (recommended) arriving bandwidth (Silverman B. W. 1986. Density Estimation p.48 eq 3.31). situations, want control density ggplot2::geom_density() provides, want use observation densities outside plot later . example, emissions data bounded 0 often upper bound well. Due strictly positive nature emissions data, gaussian kernel often good choice. Instead recommend obs_density() function UPLforOAR, builds np::npuniden.boundary() function, accurate density function bounded data. default, obs_density() assume lower bound 0, upper bound, kernel type gamma. kernel types accepted np::npuniden.boundary() can used, example data percent removals instead emissions “beta1” “beta2” upper bound 1 appropriate. default bandwidth bw σ*n−2/5\\sigma*n^{-2/5} (Renault & Scaillet 2004), though manual values least-squares likelihood search can used instead setting bw = \"cv.ls\" bw = \"cv.ml\". results obs_density() include ObsonPoint, observation densities paired emission value provided data set, obs_den_df, sequence densities across range possible emission values (xvals) based observed emissions. range emissions xvals can supplied manually, default seq(0,3*max(data$emissions,length.=1024)). Run ?obs_density console detailed information help pages.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"priors","dir":"Articles","previous_headings":"Further options for Bayesian UPL analysis","what":"Priors","title":"Bayesian UPL","text":"Bayesian inference uses prior information derive posterior distributions model parameters. default behavior Bayesian_UPL() use uninformative priors calculated based range variance emissions data. prior information can manually supplied either increase parameter space search wider, provide specific information, might particularly useful circumstances observations (.e.  n = 3).","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"convergence","dir":"Articles","previous_headings":"Further options for Bayesian UPL analysis","what":"Convergence","title":"Bayesian UPL","text":"Convergence distribution parameters assessed quantitatively using Gelman-Rubin diagnostic qualitatively producing figures convergence report pdf document. corresponding outcome convergence convYN. “Yes” diagnostics less 1.1, “weak convergence” values 1.1 1.2, “” convergence values greater 1.2. possible parameter pass Gelman-Rubin test indeed well-mixed, arrive clear posterior distribution. can happen little data (example extremely small data sets n = 3), parameter posterior simply returning prior distribution. example, poorly converged Normal distribution might even probability mean emission value, case histogram flat across entire parameter-space. add example bad convergence visual assessment also catch issues prior distribution settings. Ideally, using uninformative priors UPL calculations equal probability across parameter-space much wider posterior result. determined automatically data, cases range might wide enough. apparent parameter’s posterior histogram highly skewed towards end allowed range. case, priors need set manually wider uninformative range. add example bad posterior","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/articles/Bayesian-UPL.html","id":"long--and-heavy-tailed-distributions","dir":"Articles","previous_headings":"Further options for Bayesian UPL analysis","what":"Long- and Heavy-Tailed Distributions","title":"Bayesian UPL","text":"example Lognormal. 99^{th} percentile can unreasonably large emission number long heavy tail. often issue observations near tail, thus tail largely unsupported data. circumstances, UPL can value larger observation data set, larger physically possible. cases necessary truncate probability distribution physically reasonable bounds. done default 3 times maximum emissions value training data, can adjusted setting maxY. show example two distributions, one long-tailed one , maxY varied","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ludda Ludwig. Maintainer.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"person, ) c=c (2025). UPLforOAR: UPL calculations MACT floor standards. R package version 0.1.0, https://github.com/USEPA/UPLforOAR.","code":"@Manual{,   title = {UPLforOAR: UPL calculations for MACT floor standards},   author = {{person} and comment = c )},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/USEPA/UPLforOAR}, }"},{"path":"https://luddaludwig.github.io/UPLforOAR/contributing.html","id":"welcome","dir":"","previous_headings":"","what":"Welcome!","title":"NA","text":"’re glad ’re thinking contributing EPA open source project! ’re unsure anything, just ask — submit issue pull request anyway. worst can happen ’ll politely ask change something. appreciate friendly contributions. encourage read project’s CONTRIBUTING policy (), LICENSE, README. contributions project released MIT dedication. submitting pull request issue, agreeing comply waiver copyright interest. Contributions development package welcome encouraged. Please consider following guidelines contributing UPLforOAR: - encourage package users submit bugs enhancement requests submitting issues - see Quickstart GitHub Issues page new GitHub issues - Contributions use standard GitHub fork - pull-request workflow - encourage use tidyverse style guide contributions - Contributions ideally tested using testthat - Make sure use roxygen run check() contributing - contribute documentation, running devtools::document() refresh help docs questions want read , check EPA’s Open Source Software Code Repositories page.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/index.html","id":"uplforoar-","dir":"","previous_headings":"","what":"UPL calculations for MACT floor standards","title":"UPL calculations for MACT floor standards","text":"goal UPLforOAR provide set functions supporting National Emissions Standards Hazardous Air Pollutants (NESHAP) analyses. includes organizing data sets Maximum Achievable Control Technology (MACT) floor analysis Upper Predictive Limit (UPL) calculations. functions include selecting best top performing sources emissions data based appropriate Clean Air Act sections, determining appropriate distributions emissions data, calculating UPL Existing source Guidance (EG) New Source Performance Standards (NSPS). UPLforOAR R package replicates functionality UPL.xlsx workbook streamlining use. Using R instead Excel avoids common sources user-error copy-paste mistakes, cell-dragging, inter-sheet references. Furthermore, R package adds clarity UPL standards calculations plotting distribution probability densities emissions data underlying methods. allows user verify visually emissions data well represented assumptions probability distribution reasonable. Furthermore, UPLforOAR can used R shiny app quick reproducible UPL calculations, also generate pdf reports directly uploading emissions data without user input required.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"UPL calculations for MACT floor standards","text":"can install recent development version UPLforOAR GitHub :","code":"# install.packages(\"pak\") pak::pak(\"USEPA/UPLforOAR\")"},{"path":"https://luddaludwig.github.io/UPLforOAR/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"UPL calculations for MACT floor standards","text":"questions please reach Ludwig.Ludda@epa.gov","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/index.html","id":"example-emissions-data","dir":"","previous_headings":"","what":"Example emissions data","title":"UPL calculations for MACT floor standards","text":"example uses Hg emissions data recent EPA rule-making NESHAP Coal- Oil-fired Electric Utility Steam Generating Units. data set contains lot test report information, columns emissions sources needed MACT floor UPL analysis. emissions sources need named explicitly. emissions consistent units, sources unique unit-level (e.g. single boiler), including sub-categories. Top 5 42 sources EG standard UPL calculation Since 30 sources emissions data, top 12% chosen represent top sources. yielded 47 sources. data included regulatory docket test averages opposed individual runs. number future runs used UPL calculations 1 instead default, average 3 runs. appropriate distribution UPL calculation Normal, according ratios skewness kurtosis. simple distribution test take account negative emissions, also calculate Lognormal UPL comparison, strictly positive. Next calculate UPL using appropriate distribution, results MACT floor standard 4.8582101^{-8} lb/MMBtu Hg emissions. Lastly, want plot observation density emissions data well Normal distribution used probability density function UPL calculation. figure , Lognormal appears better represent data, yield UPL MACT floor standard 8.4825717^{-8} lb/MMBtu Hg emissions. Observation density Hg overall population. obseration data indicated black points rug along axis, observation density distribution black line. fitted lognormal distribution basis UPL estimate colored purple. fitted normal distribution basis UPL estimate colored orange. average Hg emissions vertical black line UPL results vertical purple orange lines.","code":"library(UPLforOAR) dat_emiss=read_csv(\"man/data_example/MATS_Hg.csv\",col_names=TRUE) dat_emiss$sources=paste0(dat_emiss$`Plant Name`,\"_\",dat_emiss$`Unit Number`,                          \"_\",dat_emiss$boiler_id) dat_emiss$emissions=dat_emiss$Mercury_min_lb_MMBtu dat_emiss=subset(dat_emiss,select=c(sources,emissions)) nrow(dat_emiss) # number of tests in data set #> [1] 387 summary(dat_emiss$emissions) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #> 2.630e-09 2.805e-07 1.570e-06 2.713e-06 3.820e-06 2.990e-05  dat_EG=MACT_EG(CAA_section=112,dat_emiss) dat_EG_avg=dat_EG%>%group_by(sources)%>%   summarize(avg=mean(emissions),counts=n()) dat_EG_avg=arrange(dat_EG_avg,avg) distribution_result_EG=distribution_type(dat_EG) UPL1_EG=Normal_UPL(data=dat_EG,                      future_tests = 1,                      significance=0.99) UPL2_EG=Lognormal_UPL(data=dat_EG,                      future_tests = 1,                      significance=0.99) # make an ordered sequence of emissions  # for which we will define the probability density x_hat=seq(0,3*max(dat_EG$emissions),length.out=1024) # next define the probability density along x_hat # and at each emission observation. obs_dens_results=obs_density(dat_EG,xvals=x_hat) Obs_onPoint=obs_dens_results$Obs_onPoint obs_den_df=obs_dens_results$obs_den_df # create a probability density function along the same x_hat # based on estimated distribution parameters pdf_n=dnorm(x_hat,mean=mean(dat_EG$emissions,na.rm=T),               sd=sd(dat_EG$emissions,na.rm=T)) pdf_ln=dlnorm(x_hat,mean=log(mean(dat_EG$emissions,na.rm=T)),               sd=sd(log(dat_EG$emissions),na.rm=T)) pred_dat=tibble(x_hat,pdf_ln,pdf_n) ggplot()+   geom_line(data=obs_den_df,aes(y=ydens,x=(x_hat),color='a'),size=0.75)+   geom_area(data=obs_den_df,aes(y=ydens,x=(x_hat),fill='a'),alpha=0.25)+   geom_point(aes(y=ydens,x=(emissions)),data=Obs_onPoint,              size=3,alpha=0.5,shape=19,color='black')+     geom_line(aes(y=pdf_n,x=(x_hat),color='b'),                data = pred_dat,size=0.75,linetype=2)+   geom_area(aes(y=pdf_n,x=(x_hat),fill='b'),alpha=0.25,             data = pred_dat)+   geom_line(aes(y=pdf_ln,x=(x_hat),color='c'),                data = pred_dat,size=0.75,linetype=3)+   geom_area(aes(y=pdf_ln,x=(x_hat),fill='c'),alpha=0.25,             data = pred_dat)+   ylab(\"Density\")+xlab(\"Hg emissions (lb/MMBtu)\")+   ggtitle(\"Overall observed population\")+   pop_distr_theme()+   geom_vline(aes(xintercept=(mean(dat_EG$emissions)),                  color='a'),size=1,linetype=1)+   geom_vline(aes(xintercept=(UPL1_EG),color='b'),size=1,linetype=2)+   geom_vline(aes(xintercept=(UPL2_EG),color='c'),size=1,linetype=3)+   scale_x_continuous(expand=expansion(mult=c(0,0.05)))+   scale_y_continuous(expand=expansion(mult=c(0,0.05)))+   coord_cartesian(clip='off')+   labs(color='Distribution:',fill='Distribution:')+   geom_rug(sides='b',aes(x=(emissions)),data=dat_EG,            alpha=0.5,outside=TRUE,color='black')+   scale_color_manual(values=c('black','#FF7F00','#984EA3'),                      labels=c('Observations','Lognormal'))+   scale_fill_manual(values=c('black','#FF7F00','#984EA3'),                     labels=c('Observations','Lognormal'))"},{"path":"https://luddaludwig.github.io/UPLforOAR/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"UPL calculations for MACT floor standards","text":"United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity , confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Bayesian_UPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian_UPL() wraps setup_likelihood(), run_likelihood(), output_likelihood(), converge_likelihood(), and fit_likelihood() — Bayesian_UPL","title":"Bayesian_UPL() wraps setup_likelihood(), run_likelihood(), output_likelihood(), converge_likelihood(), and fit_likelihood() — Bayesian_UPL","text":"distribution distr_list, Bayesian_UPL() setup_likelihood(), run_likelihood(), organize mcmc results output_likelihood(), test convergence likelihood parameters using converge_likelihood(), calculate goodness fit metrics using fit_likelihood(). Results include $fit_table: tibble UPL, pdf_integral, SSE, count observations within 95\\ $conv_output: tibble parameters, Gelman-Rubin diagnostics, converged distribution distr_list, $obs_pdf_dat: tibble emissions observations, corresponding observation densities, median, upper, lower 95\\ distr_list, 1 observation within 95\\ $pred_pdf_dat:tibble predicted probability density pdf_hat, observation density ydens value range emissions x_hat. maximum emission value distributions, maxY, ordered range emissions predict xvals, prior distributions initial values automatically supplied emissions data fully encompassing uninformative default. can supplied manually instead however supplying maxY, xvals, setting manual_prior = TRUE corresponding lower upper limits prior_list. manual priors used, single distribution can run time distr_list.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Bayesian_UPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian_UPL() wraps setup_likelihood(), run_likelihood(), output_likelihood(), converge_likelihood(), and fit_likelihood() — Bayesian_UPL","text":"","code":"Bayesian_UPL(   distr_list = c(\"Normal\", \"Skewed\", \"Lognormal\", \"Gamma\", \"Beta\"),   data,   future_runs = 3,   significance = 0.99,   xvals = NULL,   maxY = NULL,   convergence_report = FALSE,   manual_prior = FALSE,   prior_list = NULL )"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Bayesian_UPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian_UPL() wraps setup_likelihood(), run_likelihood(), output_likelihood(), converge_likelihood(), and fit_likelihood() — Bayesian_UPL","text":"distr_list list including one c('Normal','Skewed','Lognormal','Gamma','Beta'). Note prior bounds supplied manually, one distribution can used. data Emissions data either best source top performers, must column named 'emissions'. future_runs Integer future runs use prediction, default 3 since compliance uses 1 test average 3 runs. significance Level significance 0 1, default 0.99. xvals Ordered sequence emissions predict probability density. Default NULL, case x_hat 1024 length sequence 0 3*max(data$emissions). maxY maximum emission value possible, used truncate likelihood distributions set upper ranges prior distributions, specified manually. Default NULL, case calculated 3*max(data$emissions). convergence_report Default FALSE, report containing convergence figures generated results. TRUE, document Bayesian_UPL_convergence_MMDDYYY_HHMM.pdf written current working directory. manual_prior Default FALSE, priors specified manually uninformative calculated range emissions data. Note supplying priors manually can run one type distribution time. prior_list Optional list stats::dunif() upper lower bounds prior distributions. 'Normal' ordered c(sd_low, sd_high, mean_low,mean_high'). 'Lognormal' ordered c(log_sd_low, log_sd_high, log_mean_low, log_mean_high). 'Skewed' ordered c(omega_low, omega_high, xi_low, xi_high, alpha_low, alpha_high). 'Gamma' ordered c(rate_low, rate_high, shape_low, shape_high). 'Beta' ordered c(alpha_low, alpha_high, beta_low, beta_high).","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Bayesian_UPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian_UPL() wraps setup_likelihood(), run_likelihood(), output_likelihood(), converge_likelihood(), and fit_likelihood() — Bayesian_UPL","text":"list tibble results setup_likelihood(), run_likelihood(), output_likelihood(), obs_density(), fit_likelihood(), converge_likelihood() distribution distr_list.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/DRE_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from a an emission fraction into a percent destruction or removal efficiency — DRE_trans","title":"Convert from a an emission fraction into a percent destruction or removal efficiency — DRE_trans","text":"Convert emission fraction percent destruction removal efficiency","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/DRE_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from a an emission fraction into a percent destruction or removal efficiency — DRE_trans","text":"","code":"DRE_trans(x)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/DRE_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from a an emission fraction into a percent destruction or removal efficiency — DRE_trans","text":"x Numeric vector emissions fraction 1","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/DRE_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from a an emission fraction into a percent destruction or removal efficiency — DRE_trans","text":"Numeric vector percent destruction removal efficiencies","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Lognormal_UPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UPL assuming lognormally distributed emissions data — Lognormal_UPL","title":"Calculate UPL assuming lognormally distributed emissions data — Lognormal_UPL","text":"Uses Gram-Charlier Series-distribution approximation determine lognormal UPL.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Lognormal_UPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UPL assuming lognormally distributed emissions data — Lognormal_UPL","text":"","code":"Lognormal_UPL(data, future_runs = 3, significance = 0.99)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Lognormal_UPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UPL assuming lognormally distributed emissions data — Lognormal_UPL","text":"data Emissions data either best source top performers, must column named emissions future_runs Integer future runs use prediction, default 3 since compliance uses 1 test average 3 runs. significance Level significance 0 1, default 0.99.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Lognormal_UPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate UPL assuming lognormally distributed emissions data — Lognormal_UPL","text":"Upper predictive limit significance level average number future test runs","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Lognormal_UPL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate UPL assuming lognormally distributed emissions data — Lognormal_UPL","text":"\"upper prediction limit arithmetic mean lognormal random variable\" authored Dulal Kumar Bhaumik Robert David Gibbons 2004","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_EG.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects top sources from emissions data — MACT_EG","title":"Selects top sources from emissions data — MACT_EG","text":"Selects top sources emissions data","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_EG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects top sources from emissions data — MACT_EG","text":"","code":"MACT_EG(CAA_section = 112, data)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_EG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects top sources from emissions data — MACT_EG","text":"CAA_section Applicable Clean Air Act section, either 112 129 data Data.frame tibble columns emissions (numeric) sources (character factor)","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_EG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects top sources from emissions data — MACT_EG","text":"Data set (tibble) top 5 12\\ number sources, used UPL calculations Maximum Achievable Control Technology (MACT) floor analysis Existing Source Guidelines.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_NSPS.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects best performer from emissions data — MACT_NSPS","title":"Selects best performer from emissions data — MACT_NSPS","text":"Selects best performer emissions data","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_NSPS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects best performer from emissions data — MACT_NSPS","text":"","code":"MACT_NSPS(data)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_NSPS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects best performer from emissions data — MACT_NSPS","text":"data Data.frame tibble columns emissions (numeric) sources (character factor)","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/MACT_NSPS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects best performer from emissions data — MACT_NSPS","text":"Data set (tibble) containing emissions data best performing source New Source Performance Standards.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Normal_UPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UPL assuming normally distributed emissions data — Normal_UPL","title":"Calculate UPL assuming normally distributed emissions data — Normal_UPL","text":"Calculate UPL assuming normally distributed emissions data","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Normal_UPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UPL assuming normally distributed emissions data — Normal_UPL","text":"","code":"Normal_UPL(data, future_runs = 3, significance = 0.99)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Normal_UPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UPL assuming normally distributed emissions data — Normal_UPL","text":"data Emissions data either best source top performers, must column named emissions. future_runs Integer future runs use prediction, default 3 since compliance uses 1 test average 3 runs. significance Level significance 0 1, default 0.99.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Normal_UPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate UPL assuming normally distributed emissions data — Normal_UPL","text":"Upper predictive limit (UPL) significance level average number future test runs.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Skewed_UPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UPL assuming skew-normal distributed emissions data — Skewed_UPL","title":"Calculate UPL assuming skew-normal distributed emissions data — Skewed_UPL","text":"Calculate UPL assuming skew-normal distributed emissions data","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Skewed_UPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UPL assuming skew-normal distributed emissions data — Skewed_UPL","text":"","code":"Skewed_UPL(data, future_runs = 3, significance = 0.99)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Skewed_UPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UPL assuming skew-normal distributed emissions data — Skewed_UPL","text":"data Emissions data either best source top performers, must column named emissions. future_runs Integer future runs use prediction, default 3 since compliance uses 1 test average 3 runs. significance Level significance 0 1, default 0.99.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/Skewed_UPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate UPL assuming skew-normal distributed emissions data — Skewed_UPL","text":"Upper predictive limit (UPL) significance level average number future test runs.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_figs.html","id":null,"dir":"Reference","previous_headings":"","what":"Converge_figs() pulls convergence figures for each parameter — converge_figs","title":"Converge_figs() pulls convergence figures for each parameter — converge_figs","text":"convergence summary plots generated runjags::run.jags() defining parameters selected distribution","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_figs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converge_figs() pulls convergence figures for each parameter — converge_figs","text":"","code":"converge_figs(distribution, jags_model_run)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_figs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converge_figs() pulls convergence figures for each parameter — converge_figs","text":"distribution One 'Normal', 'Skewed', 'Lognormal', 'Gamma', 'Beta'. jags_model_run output list returned run_likelihood(), includes jags model run_results, likelihood distribution type, data, xvals, future_tests used inputs run_likelihood()","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_figs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converge_figs() pulls convergence figures for each parameter — converge_figs","text":"list histograms MCMC chain plots per parameter","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests for convergence in likelihood parameters — converge_likelihood","title":"Tests for convergence in likelihood parameters — converge_likelihood","text":"Gelman-Rubin convergence tests defining parameter likelihood distribution.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests for convergence in likelihood parameters — converge_likelihood","text":"","code":"converge_likelihood(jags_model_run)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests for convergence in likelihood parameters — converge_likelihood","text":"jags_model_run output list returned run_likelihood().","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/converge_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests for convergence in likelihood parameters — converge_likelihood","text":"tibble parameters convergence results coda::gelman.diag(), Values greater 1.2 indicate problems convergence. Values 1.1 1.2 indicate weak convergence. Values less 1.1 indicate good convergence. test indicates 3 mcmc chains mixed stable insufficient indicator convergence. Visual plots posterior distributions investigated well.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/distribution_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines the type of distribution from skewness and kurtosis ratios — distribution_type","title":"Determines the type of distribution from skewness and kurtosis ratios — distribution_type","text":"Determines type distribution skewness kurtosis ratios","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/distribution_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines the type of distribution from skewness and kurtosis ratios — distribution_type","text":"","code":"distribution_type(data)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/distribution_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines the type of distribution from skewness and kurtosis ratios — distribution_type","text":"data Emissions data either best source top performers, must column named emissions","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/distribution_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines the type of distribution from skewness and kurtosis ratios — distribution_type","text":"String either 'Normal', 'Lognormal', 'Skewed'","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/distribution_type.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines the type of distribution from skewness and kurtosis ratios — distribution_type","text":"measuring skewness kurtosis\" Dragan Doric, et al. Springer Science + Buisness Media B. V. 2007. September 20, 2007","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/fit_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_likelihood() calculates the error between fitted density and observed density distributions — fit_likelihood","title":"fit_likelihood() calculates the error between fitted density and observed density distributions — fit_likelihood","text":"function takes list results output_likelihood() compares predicted density distributions observed density distributions, estimating SSE (sum squared errors) counts number emissions observations densities overlapping 95\\","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/fit_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_likelihood() calculates the error between fitted density and observed density distributions — fit_likelihood","text":"","code":"fit_likelihood(likelihood_result)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/fit_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_likelihood() calculates the error between fitted density and observed density distributions — fit_likelihood","text":"likelihood_result Output list output_likelihood()","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/fit_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit_likelihood() calculates the error between fitted density and observed density distributions — fit_likelihood","text":"sum squared error (SSE) predicted observed probability densities, count emissions whose 95\\ predicted probability densities overlaps observed probability densities. Also includes integration predicted pdf, distribution type used, merged data sets observed predicted densities emission value xval, named obs_pdf_dat xhat_pdf_dat respectively. obs_pdf_dat also includes upper lower 95\\ pdf. UPL estimate output_likelihood() included well.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/mcmc_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom theme for ggplot mcmc iterations — mcmc_theme","title":"Custom theme for ggplot mcmc iterations — mcmc_theme","text":"function sets ggplot2 theme elements","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/mcmc_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom theme for ggplot mcmc iterations — mcmc_theme","text":"","code":"mcmc_theme()"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/multi_source_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom theme for ggplot multi-source density distributions — multi_source_theme","title":"Custom theme for ggplot multi-source density distributions — multi_source_theme","text":"function sets ggplot2 theme elements","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/multi_source_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom theme for ggplot multi-source density distributions — multi_source_theme","text":"","code":"multi_source_theme()"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/obs_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the density of emissions observations — obs_density","title":"Calculates the density of emissions observations — obs_density","text":"Calculates density emissions observations","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/obs_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the density of emissions observations — obs_density","text":"","code":"obs_density(data, xvals = NULL, up = Inf, low = 0, kernel = \"gamma\", bw = NULL)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/obs_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the density of emissions observations — obs_density","text":"data Emissions data either best source top performers, must column named emissions. xvals Ordered sequence emissions define emission densities along. Default NULL, case xvals 1024 length sequence. 0 3*max(data$emissions). Optional upper limit bound density, default Inf. low Optional lower limit bound density, default 0. kernel Kernel choice density function, default gamma defined (0,Inf). options include: c('gaussian1','gaussian2','beta1','beta2','fb','fbl','fbu','rigaussian'). See np::npuniden.boundary() information kernel options. bw Optional bandwidth, default NULL case bw = sd(emissions)*n^(-2/5), n number emissions. bandwidth can also provided manually, searched using least squares cross-validation bw = \"cv.ls\" likelihood cross-validation bw = \"cv.ml\".","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/obs_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the density of emissions observations — obs_density","text":"list containing two tibbles, Obs_onPoint exact emission observations densities, obs_den_df densities every position given xvals.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/obs_density.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the density of emissions observations — obs_density","text":"Bandwidth set following Renault O. & O. Scaillet. way recovery: parametric bias free estimation recovery rate densities. 2004. Journal Banking Finance. 28:12 p. 2915-2931.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/output_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Organizes mcmc output from run_likelihood() — output_likelihood","title":"Organizes mcmc output from run_likelihood() — output_likelihood","text":"Output_likelihood() takes jags_model_run produced run_likelihood(), merges mcmc chains calculates UPL well providing predicted pdf metrics.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/output_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organizes mcmc output from run_likelihood() — output_likelihood","text":"","code":"output_likelihood(jags_model_run, significance = 0.99)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/output_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organizes mcmc output from run_likelihood() — output_likelihood","text":"jags_model_run output list returned run_likelihood(), includes jags model run_results, likelihood distribution type, data, xvals, future_runs used inputs run_likelihood(). significance Level significance 0 1, default 0.99.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/output_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organizes mcmc output from run_likelihood() — output_likelihood","text":"list including distr, distribution used write_likelihood(), predicted_mean, mean fitted distribution, UPL_Bayes, upper predictive limit based significance level average distribution future_runs number draws, obs_pdf, predicted probability density observation, pred_pdf, predicted probability density point xvals.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/pop_distr_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom theme for ggplot overall density distributions — pop_distr_theme","title":"Custom theme for ggplot overall density distributions — pop_distr_theme","text":"function sets ggplot2 theme elements","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/pop_distr_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom theme for ggplot overall density distributions — pop_distr_theme","text":"","code":"pop_distr_theme()"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/run_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs JAGS model scripts for chosen likelihood — run_likelihood","title":"Runs JAGS model scripts for chosen likelihood — run_likelihood","text":"Runs JAGS model setup_likelihood() model_code output. Traces variables par_list running 3 chains parallel burnin adapt 10,000 keeping 10,000 iterations per chain.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/run_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs JAGS model scripts for chosen likelihood — run_likelihood","text":"","code":"run_likelihood(model_input, xvals = NULL, maxY = NULL, future_runs = 3)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/run_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs JAGS model scripts for chosen likelihood — run_likelihood","text":"model_input Results setup_likelihood(), including JAGS model script, emissions data, distribution, initial values list, parameters monitor. xvals Ordered sequence emissions predict probability density. Default NULL, case x_hat 1024 length sequence 0 3*max(data$emissions). maxY maximum emission value possible, used truncate likelihood distributions set upper ranges prior distributions. Default NULL, cas calculated 3*maximum(data$emissions). future_runs Integer future runs use prediction, default 3 since compliance uses 1 test average 3 runs.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/run_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs JAGS model scripts for chosen likelihood — run_likelihood","text":"runjags object named run_results, likelihood distribution JAGS model script, well data xvals used inputs.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/setup_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets up path to JAGS script, initial values, and variable list to monitor — setup_likelihood","title":"Sets up path to JAGS script, initial values, and variable list to monitor — setup_likelihood","text":"function defines jagsmodel script call based selected distribution. also defines initial values variables monitor.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/setup_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets up path to JAGS script, initial values, and variable list to monitor — setup_likelihood","text":"","code":"setup_likelihood(   distribution,   data,   manual_prior = FALSE,   prior_list = NULL,   random = FALSE )"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/setup_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets up path to JAGS script, initial values, and variable list to monitor — setup_likelihood","text":"distribution 'Normal', 'Gamma', 'Skewed', 'Lognormal', 'Beta'. data Emissions data either best source top performers, must column named emissions. manual_prior Default FALSE, priors uninformative calculated range emissions data. TRUE priors specified manually prior_list. prior_list Optional list stats::dunif() upper lower bounds prior distributions. 'Normal' ordered c(sd_low, sd_high, mean_low, mean_high). 'Lognormal' ordered c(log_sd_low, log_sd_high, log_mean_low, log_mean_high). 'Skewed' ordered c(omega_low, omega_high, xi_low, xi_high, alpha_low, alpha_high). 'Gamma'orderedc(rate_low, rate_high, shape_low, shape_high). 'Beta'orderedc(alpha_low, alpha_high, beta_low, beta_high)`. random Default FALSE random seeds defined via .RNG.name .RNG.seed JAGS runs exactly reproducible. Changing TRUE use random values .RNG.name .RNG.seed instead.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/setup_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets up path to JAGS script, initial values, and variable list to monitor — setup_likelihood","text":"Object model_code, string written R script JAGS can call, par_list list parameters traced running JAGS model, dat_inits list initial parameter values random seeds 3 chains, distribution used likelihood model.","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/write_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes likelihood scripts for JAGS model calls — write_likelihood","title":"Writes likelihood scripts for JAGS model calls — write_likelihood","text":"function writes R script JAGS call based selected distribution prior. priors uninformative set based emissions data, unless specified manually via setup_likelihood(). likelihood distributions truncated (0,maxY), maxY can specified used default maxY = 3*max(data$emissions) run_likelihood().","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/write_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes likelihood scripts for JAGS model calls — write_likelihood","text":"","code":"write_likelihood(distribution, manual_prior = FALSE, write_wd = NULL)"},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/write_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes likelihood scripts for JAGS model calls — write_likelihood","text":"distribution 'Normal', 'Gamma', 'Skewed', 'Lognormal', 'Beta'. manual_prior Default FALSE, priors specified manually uninformative calculated range emissions data. write_wd Default NULL, case JAGS scripts written inst/JAGS folder package directory. location run_likelihood() look JAGS scripts assigned via setup_likelihood().","code":""},{"path":"https://luddaludwig.github.io/UPLforOAR/reference/write_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes likelihood scripts for JAGS model calls — write_likelihood","text":"object model_code, string written R script JAGS can call distribution used likelihood model.","code":""}]
